}
}
m <- addLayersControl(map = m,
baseGroups = list_of_feats,
overlayGroups = list_of_years,
options = layersControlOptions(collapsed = F)
) %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
var baseLayer = 'Value1';
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if ('Value1' !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
console.log(myMap.baselayer);
myMap.on('baselayerchange',
function (e) {
baseLayer=e.name;
myMap.eachLayer(function (layer) {
var id = layer.options.layerId;
if (id){
if (e.name !== id.substring(1,)){
layer.getElement().style.display = 'none';
layer.closePopup();
}
if (e.name === id.substring(1,)){
layer.getElement().style.display = 'block';
}
}
});
})
myMap.on('overlayadd', function(e){
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if (baseLayer !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
})
}")
m
data <- data.frame(ID = c("1", "2","3","4","5","6","7","8"),
Name = c("A", "A", "A", "B", "B", "C", "C", "C"),
Value1 = c(12,43,54,34,23,77,44,22),
Value2 = c(6,5,2,7,5,6,4,3),
Lat = c(51.1, 51.6, 57.3, 52.4, 56.3, 54.3, 60.4, 49.2),
Lon = c(5, -3, -2, -1, 4, 3, -5, 0))
data %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircles(lat=~Lat,
lng=~Lon,
radius = ~Value1*1000,
group=~Name,
label=~Name,
popup=~as.character(Value1),
layerId = ~paste(ID,"Value1", sep="")) %>%
addCircles(lat=~Lat,
lng=~Lon,
radius = ~Value2,
group=~Name,
label=~Name,
popup=~as.character(Value2),
layerId = ~paste(ID,"Value2", sep="")) %>%
addLayersControl(
baseGroups = c("Value1", "Value2"),
overlayGroups = c("A", "B", "C"),
options = layersControlOptions(collapsed = F)
) %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
var baseLayer = 'Value1';
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if ('Value1' !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
console.log(myMap.baselayer);
myMap.on('baselayerchange',
function (e) {
baseLayer=e.name;
myMap.eachLayer(function (layer) {
var id = layer.options.layerId;
if (id){
if (e.name !== id.substring(1,)){
layer.getElement().style.display = 'none';
layer.closePopup();
}
if (e.name === id.substring(1,)){
layer.getElement().style.display = 'block';
}
}
});
})
myMap.on('overlayadd', function(e){
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if (baseLayer !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
})
}")
data <- data.frame(ID = c("1", "2","3","4","5","6","7","8", '9'),
Name = c("A", "A", "A", "B", "B", "C", "C", "C", 'C'),
Value1 = c(12,43,54,34,23,77,44,22, 33),
Value2 = c(6,5,2,7,5,6,4,3, 2),
Lat = c(51.1, 51.6, 57.3, 52.4, 56.3, 54.3, 60.4, 49.2, 50),
Lon = c(5, -3, -2, -1, 4, 3, -5, 0, 1))
data %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircles(lat=~Lat,
lng=~Lon,
radius = ~Value1*1000,
group=~Name,
label=~Name,
popup=~as.character(Value1),
layerId = ~paste(ID,"Value1", sep="")) %>%
addCircles(lat=~Lat,
lng=~Lon,
radius = ~Value2,
group=~Name,
label=~Name,
popup=~as.character(Value2),
layerId = ~paste(ID,"Value2", sep="")) %>%
addLayersControl(
baseGroups = c("Value1", "Value2"),
overlayGroups = c("A", "B", "C"),
options = layersControlOptions(collapsed = F)
) %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
var baseLayer = 'Value1';
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if ('Value1' !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
console.log(myMap.baselayer);
myMap.on('baselayerchange',
function (e) {
baseLayer=e.name;
myMap.eachLayer(function (layer) {
var id = layer.options.layerId;
if (id){
if (e.name !== id.substring(1,)){
layer.getElement().style.display = 'none';
layer.closePopup();
}
if (e.name === id.substring(1,)){
layer.getElement().style.display = 'block';
}
}
});
})
myMap.on('overlayadd', function(e){
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if (baseLayer !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
})
}")
data <- data.frame(ID = c("1", "2","3","4","5","6","7","8", '9'),
Name = c("2010", "2010", "2010", "2014", "2014", "2019",
"2019", "2019", '2019'),
Value1 = c(12,43,54,34,23,77,44,22, 33),
Value2 = c(6,5,2,7,5,6,4,3, 2),
Lat = c(51.1, 51.6, 57.3, 52.4, 56.3, 54.3, 60.4, 49.2, 50),
Lon = c(5, -3, -2, -1, 4, 3, -5, 0, 1))
data %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircles(lat=~Lat,
lng=~Lon,
radius = ~Value1*1000,
group=~Name,
label=~Name,
popup=~as.character(Value1),
layerId = ~paste(ID,"Value1", sep="")) %>%
addCircles(lat=~Lat,
lng=~Lon,
radius = ~Value2,
group=~Name,
label=~Name,
popup=~as.character(Value2),
layerId = ~paste(ID,"Value2", sep="")) %>%
addLayersControl(
baseGroups = c("Value1", "Value2"),
overlayGroups = c("A", "B", "C"),
options = layersControlOptions(collapsed = F)
) %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
var baseLayer = 'Value1';
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if ('Value1' !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
console.log(myMap.baselayer);
myMap.on('baselayerchange',
function (e) {
baseLayer=e.name;
myMap.eachLayer(function (layer) {
var id = layer.options.layerId;
if (id){
if (e.name !== id.substring(1,)){
layer.getElement().style.display = 'none';
layer.closePopup();
}
if (e.name === id.substring(1,)){
layer.getElement().style.display = 'block';
}
}
});
})
myMap.on('overlayadd', function(e){
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if (baseLayer !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
})
}")
data <- data.frame(ID = c("1", "2","3","4","5","6","7","8", '9'),
Name = c("2010", "2010", "2010", "2014", "2014", "2019",
"2019", "2019", '2019'),
Value1 = c(12,43,54,34,23,77,44,22, 33),
Value2 = c(6,5,2,7,5,6,4,3, 2),
Lat = c(51.1, 51.6, 57.3, 52.4, 56.3, 54.3, 60.4, 49.2, 50),
Lon = c(5, -3, -2, -1, 4, 3, -5, 0, 1))
data %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircles(lat=~Lat,
lng=~Lon,
radius = ~Value1*1000,
group=~Name,
label=~Name,
popup=~as.character(Value1),
layerId = ~paste(ID,"Value1", sep="")) %>%
addCircles(lat=~Lat,
lng=~Lon,
radius = ~Value2,
group=~Name,
label=~Name,
popup=~as.character(Value2),
layerId = ~paste(ID,"Value2", sep="")) %>%
addLayersControl(
baseGroups = c("Value1", "Value2"),
overlayGroups = c("2010", "2014", "2019"),
options = layersControlOptions(collapsed = F)
) %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
var baseLayer = 'Value1';
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if ('Value1' !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
console.log(myMap.baselayer);
myMap.on('baselayerchange',
function (e) {
baseLayer=e.name;
myMap.eachLayer(function (layer) {
var id = layer.options.layerId;
if (id){
if (e.name !== id.substring(1,)){
layer.getElement().style.display = 'none';
layer.closePopup();
}
if (e.name === id.substring(1,)){
layer.getElement().style.display = 'block';
}
}
});
})
myMap.on('overlayadd', function(e){
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if (baseLayer !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
})
}")
data <- data.frame(ID = c("1", "2","3","4","5","6","7","8", '9'),
Name = c("2010", "2010", "2010", "2014", "2014", "2019",
"2019", "2019", '2019'),
LIGHT = c(12,43,54,34,23,77,44,22, 33),
Value2 = c(6,5,2,7,5,6,4,3, 2),
Lat = c(51.1, 51.6, 57.3, 52.4, 56.3, 54.3, 60.4, 49.2, 50),
Lon = c(5, -3, -2, -1, 4, 3, -5, 0, 1))
data %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircles(lat=~Lat,
lng=~Lon,
radius = ~LIGHT*1000,
group=~Name,
label=~Name,
popup=~as.character(LIGHT),
layerId = ~paste(ID,"LIGHT", sep="")) %>%
addCircles(lat=~Lat,
lng=~Lon,
radius = ~Value2,
group=~Name,
label=~Name,
popup=~as.character(Value2),
layerId = ~paste(ID,"Value2", sep="")) %>%
addLayersControl(
baseGroups = c("LIGHT", "Value2"),
overlayGroups = c("2010", "2014", "2019"),
options = layersControlOptions(collapsed = F)
) %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
var baseLayer = 'Value1';
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if ('Value1' !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
console.log(myMap.baselayer);
myMap.on('baselayerchange',
function (e) {
baseLayer=e.name;
myMap.eachLayer(function (layer) {
var id = layer.options.layerId;
if (id){
if (e.name !== id.substring(1,)){
layer.getElement().style.display = 'none';
layer.closePopup();
}
if (e.name === id.substring(1,)){
layer.getElement().style.display = 'block';
}
}
});
})
myMap.on('overlayadd', function(e){
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if (baseLayer !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
})
}")
setwd('C:/Users/Kieran/Desktop/NE/NE_work')
source('./data_prep_figure4.R')
name_gl <- get_names('rename_habitat.csv')
name_swap_vector <- name_gl[[1]]
bb_list <- name_gl[[2]]
bp_list <- name_gl[[3]]
df_all <- read_all_data('all_plots.csv')
# Taking the data from just one site
df_site <- filter(df_all, SITECODE == 'B15')
print(unique(df_site$BAP_BROAD))
print(unique(df_site$BAP_PRIORITY))
df_site <- fix_names(df_site)
# transform the eastings and northings into latitude and longitude
df_site <- transform_coords(df_site)
# Making the sub dataframes with only the major habitats selected
#object[[1]] is the data frame. object[[2]] is the list of habitats
df_site.bb <- select_by('BAP_BROAD', 20)
df_site.bp <- select_by('BAP_PRIORITY', 15)
df_site.nvcb <- select_by('NVC_groupb', 15)
df_site.nvcc <- select_by('NVC_groupc', 15)
# the centre points of the maps
centre_coords <- get_centre_coords(df_site)
east_cent <- centre_coords[[1]]
north_cent <- centre_coords[[2]]
unique_years <- unique(df_site$YEAR)
unique_habs <- unique(df_site$BAP_BROAD)
# these columns give inofrmation about the plot but aren't quantitatively comp
track_cols <- c('PLOT_ID', 'coords.easting', 'coords.northing', 'BAP_BROAD',
'BAP_PRIORITY', 'NVC_groupb', 'NVC_groupc')
# these columns wil be compared between years
change_cols <- c('Species_richness', 'Species_diversity', 'LIGHT', 'WETNESS',
'PH', 'FERTILITY', 'COMPETITION', 'STRESS', 'RUDERALS',
'MEAN_HEIGHT', 'litter', 'bare.x')
total_change <- get_change_by_year(df_site)
df_site2 <- df_site[!is.na(df_site[ ,'LIGHT']),]
# make palette
domain <- range(df_site2[['FERTILITY']])
pal_f <- colorNumeric(palette = "Purples", domain = domain)
# make palette
domain <- range(df_site2[['WETNESS']])
pal_w <- colorNumeric(palette = "Purples", domain = domain)
######################
df_site2$unique_id <- paste(df_site2$PLOT_ID, df_site2$YEAR, sep='_')
df_site2$unique_id2 <- as.character(1:length(df_site2$PLOT_ID))
print(df_site2$unique_id2)
list_of_years <- unique(df_site2$YEAR)
list_of_feats <- c('WETNESS', 'PH', 'FERTILITY', 'LIGHT')
# list_of_palettes <- list()
# for (jj in 1:length(list_of_feats)) {
#   domain <- range(df_site2[[list_of_feats[jj]]])
#   pal <- colorNumeric(palette = "Purples", domain = domain)
#   list_of_palettes[[jj]] <- pal
# }
pal_test <- colorNumeric(palette = "Purples", domain = c(0,10))
m <- leaflet() %>%
addTiles() %>%
setView(lng=east_cent, lat=north_cent, zoom = 14)
for (ii in 1:length(list_of_years)) {
df_site_year <- df_site2 %>%
filter(YEAR == list_of_years[ii])
for (jj in 1:length(list_of_feats)) {
#pal_cont <- list_of_palettes[jj]
m <- addCircleMarkers(
map = m,
lat=df_site_year$coords.northing,
lng=df_site_year$coords.easting,
color = pal_test(df_site_year[[list_of_feats[jj]]]),
stroke = FALSE, fillOpacity = 0.7,
group=list_of_years[ii],
label=list_of_years[ii],
popup=as.character(df_site_year[[list_of_feats[jj]]]),
#layerId = paste(df_site_year$unique_id2, list_of_feats[jj], sep=""))
layerId = paste(df_site_year$unique_id2, list_of_feats[jj], sep=""))
}
}
m <- addLayersControl(map = m,
baseGroups = list_of_feats,
overlayGroups = list_of_years,
options = layersControlOptions(collapsed = F)
) %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
var baseLayer = 'WETNESS';
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if ('WETNESS' !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
console.log(myMap.baselayer);
myMap.on('baselayerchange',
function (e) {
baseLayer=e.name;
myMap.eachLayer(function (layer) {
var id = layer.options.layerId;
if (id){
if (e.name !== id.substring(1,)){
layer.getElement().style.display = 'none';
layer.closePopup();
}
if (e.name === id.substring(1,)){
layer.getElement().style.display = 'block';
}
}
});
})
myMap.on('overlayadd', function(e){
myMap.eachLayer(function(layer){
var id = layer.options.layerId;
if (id){
if (baseLayer !== id.substring(1,)){
layer.getElement().style.display = 'none';
}
}
})
})
}")
m
