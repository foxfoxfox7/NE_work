source('./data_prep_figure4.R')
################################################################################
name_swap_bap <- get_names('./dataframes/rename_habitat.csv')[[1]]
name_swap_nvc <- get_names('./dataframes/rename_habitat.csv')[[2]]
bb_list <- get_names('./dataframes/rename_habitat.csv')[[3]]
bp_list <- get_names('./dataframes/rename_habitat.csv')[[4]]
df <- read_csv('./dataframes/all_plots.csv')
av_cols <- c('Species_richness', 'Species_diversity', 'Light', 'Fertility',
'pH', 'Wetness', 'Stress', 'Competition', 'Ruderals',
'Vegetation_height', 'Litter', 'Bare_ground')
df[ ,av_cols][is.na(df[ ,av_cols])] <- 0
df <- df %>%
fix_names(., name_swap_bap)
all_habs <- unique(df$BAP_broad)
hab_summary_list = list()
for (ii in 1:length(all_habs)) {
df_hab <- df %>%
filter(BAP_broad == all_habs[ii])
hab_av <- summarize_all(df_hab[, av_cols], mean)
hab_av$Habitat <- all_habs[ii]
hab_summary_list[[ii]] <- hab_av
}
hab_summary <- bind_rows(hab_summary_list)
hab_summary <- hab_summary[complete.cases(hab_summary[ , 'Habitat']),]
#row.names(hab_summary) <- hab_summary$Habitat
View(hab_summary)
df_show <- df %>%
filter(Habitat %in% df_site.bb[[2]])
print(df_show)
df_show <- df_show[ ,c('Habitat', feature, 1)]
df_show %>%
kbl(caption = "Average values using all plots across LTMN sites and years.") %>%
kable_styling()
df_show <- df %>%
filter(Habitat %in% df_site.bb[[2]])
View(df)
df_show <- hab_summary %>%
filter(Habitat %in% df_site.bb[[2]])
df_site.bb <- select_by(df_site, 'BAP_BROAD', 20)#, include = 'Inland Rock')
df_site.bp <- select_by(df_site, 'BAP_PRIORITY', 15)
df_site.nvcb <- select_by(df_site, 'NVC_groupb', 15)
df_site.nvcc <- select_by(df_site, 'NVC_groupc', 20)
df_all <- read_csv('./dataframes/report_plots.csv')
site_code <- 'B12'
# Taking the data from just one site
df_site <- filter(df_all, SITECODE == site_code) %>%
fix_names(., name_swap_bap) %>%
# transform the eastings and northings into latitude and longitude
transform_coords(.)
# Converts the NVC abbreviations to the full names
df_site$NVC_groupc <- name_swap(df_site$NVC_groupc, name_swap_nvc)
df_site$YEAR <- as.character(df_site$YEAR)
df_site$Species_diversity <- round(df_site$Species_diversity, 2)
# PLOT 30 for Lullington is really weird and should be removed as it ruins the
# scale
# df_site <- df_site %>%
#   filter(PLOT_ID != 30) %>%
#   filter(PLOT_ID != '30a') %>%
#   filter(PLOT_ID != '30')
# Making the sub dataframes with only the major habitats selected
#object[[1]] is the data frame. object[[2]] is the list of habitats
df_site.bb <- select_by(df_site, 'BAP_BROAD', 20)#, include = 'Inland Rock')
df_site.bp <- select_by(df_site, 'BAP_PRIORITY', 15)
df_site.nvcb <- select_by(df_site, 'NVC_groupb', 15)
df_site.nvcc <- select_by(df_site, 'NVC_groupc', 20)
df_all <- read_csv('./dataframes/report_plots.csv')
site_code <- 'B12'
df_site <- filter(df_all, SITECODE == site_code) %>%
fix_names(., name_swap_bap) %>%
# transform the eastings and northings into latitude and longitude
transform_coords(.)
df_site <- filter(df_all, Sitecode == site_code) %>%
fix_names(., name_swap_bap) %>%
# transform the eastings and northings into latitude and longitude
transform_coords(.)
# Converts the NVC abbreviations to the full names
df_site$NVC_groupc <- name_swap(df_site$NVC_groupc, name_swap_nvc)
df_site$YEAR <- as.character(df_site$YEAR)
df_site$Species_diversity <- round(df_site$Species_diversity, 2)
# PLOT 30 for Lullington is really weird and should be removed as it ruins the
# scale
# df_site <- df_site %>%
#   filter(PLOT_ID != 30) %>%
#   filter(PLOT_ID != '30a') %>%
#   filter(PLOT_ID != '30')
# Making the sub dataframes with only the major habitats selected
#object[[1]] is the data frame. object[[2]] is the list of habitats
df_site.bb <- select_by(df_site, 'BAP_BROAD', 20)#, include = 'Inland Rock')
df_site.bp <- select_by(df_site, 'BAP_PRIORITY', 15)
df_site.nvcb <- select_by(df_site, 'NVC_groupb', 15)
df_site.nvcc <- select_by(df_site, 'NVC_groupc', 20)
# Converts the NVC abbreviations to the full names
df_site$NVC_groupc <- name_swap(df_site$NVC_groupc, name_swap_nvc)
df_site$YEAR <- as.character(df_site$YEAR)
df_site$Species_diversity <- round(df_site$Species_diversity, 2)
setwd("C:/Users/kiera/Work/NE_work/Report")
getwd()
source('./data_prep_figure4.R')
################################################################################
name_swap_bap <- get_names('./dataframes/rename_habitat.csv')[[1]]
name_swap_nvc <- get_names('./dataframes/rename_habitat.csv')[[2]]
bb_list <- get_names('./dataframes/rename_habitat.csv')[[3]]
bp_list <- get_names('./dataframes/rename_habitat.csv')[[4]]
#df_all <- read_all_data('all_plots.csv')
df_all <- read_csv('./dataframes/report_plots.csv')
site_code <- 'B14'
# Taking the data from just one site
df_site <- filter(df_all, Sitecode == site_code) %>%
fix_names(., name_swap_bap) %>%
# transform the eastings and northings into latitude and longitude
transform_coords(.)
# Converts the NVC abbreviations to the full names
df_site$NVC_habitat <- name_swap(df_site$NVC_habitat, name_swap_nvc)
df_site$Year <- as.character(df_site$Year)
#df_site$Species_diversity <- round(df_site$Species_diversity, 2)
# Making the sub dataframes with only the major habitats selected
#object[[1]] is the data frame. object[[2]] is the list of habitats
df_site.bb <- select_by(df_site, 'BAP_broad', 20)#include = c('Calcareous Grassland', 'Dwarf Shrub Heath'))
df_site.bp <- select_by(df_site, 'BAP_priority', 15)
df_site.nvcb <- select_by(df_site, 'NVC_group', 15)
df_site.nvcc <- select_by(df_site, 'NVC_habitat', 15)
# the centre points of the maps
east_cent <- get_centre_coords(df_site)[[1]]
north_cent <- get_centre_coords(df_site)[[2]]
unique_years <- unique(df_site$Year)
unique_habs <- unique(df_site$BAP_broad)
unique_nvchabs <- unique(df_site$NVC_habitat)
df_change <- get_change_by_year(df_site)
df_all2 <- read_csv('./dataframes/all_plots.csv')
hab_sum <- get_hab_sums(df_all2)
setwd("C:/Users/kiera/Work/NE_work/Report")
getwd()
source('./data_prep_figure4.R')
################################################################################
name_swap_bap <- get_names('./dataframes/rename_habitat.csv')[[1]]
name_swap_nvc <- get_names('./dataframes/rename_habitat.csv')[[2]]
bb_list <- get_names('./dataframes/rename_habitat.csv')[[3]]
bp_list <- get_names('./dataframes/rename_habitat.csv')[[4]]
#df_all <- read_all_data('all_plots.csv')
df_all <- read_csv('./dataframes/report_plots.csv')
site_code <- 'B14'
# Taking the data from just one site
df_site <- filter(df_all, Sitecode == site_code) %>%
fix_names(., name_swap_bap) %>%
# transform the eastings and northings into latitude and longitude
transform_coords(.)
# Converts the NVC abbreviations to the full names
df_site$NVC_habitat <- name_swap(df_site$NVC_habitat, name_swap_nvc)
df_site$Year <- as.character(df_site$Year)
#df_site$Species_diversity <- round(df_site$Species_diversity, 2)
# Making the sub dataframes with only the major habitats selected
#object[[1]] is the data frame. object[[2]] is the list of habitats
df_site.bb <- select_by(df_site, 'BAP_broad', 20)#include = c('Calcareous Grassland', 'Dwarf Shrub Heath'))
df_site.bp <- select_by(df_site, 'BAP_priority', 15)
df_site.nvcb <- select_by(df_site, 'NVC_group', 15)
df_site.nvcc <- select_by(df_site, 'NVC_habitat', 15)
# the centre points of the maps
east_cent <- get_centre_coords(df_site)[[1]]
north_cent <- get_centre_coords(df_site)[[2]]
unique_years <- unique(df_site$Year)
unique_habs <- unique(df_site$BAP_broad)
unique_nvchabs <- unique(df_site$NVC_habitat)
df_change <- get_change_by_year(df_site)
df <- read_csv('./dataframes/all_plots.csv')
View(df)
av_cols <- c('Species_richness', 'Species_diversity', 'Light', 'Fertility',
'pH', 'Wetness', 'Stress', 'Competition', 'Ruderals',
'Vegetation_height', 'Litter', 'Bare_ground')
df[ ,av_cols][is.na(df[ ,av_cols])] <- 0
df <- df %>%
fix_names(., name_swap_bap)
all_habs <- unique(df$BAP_broad)
hab_summary_list = list()
for (ii in 1:length(all_habs)) {
df_hab <- df %>%
filter(BAP_broad == all_habs[ii])
hab_av <- summarize_all(df_hab[, av_cols], mean)
hab_av$Habitat <- all_habs[ii]
hab_summary_list[[ii]] <- hab_av
}
hab_summary <- bind_rows(hab_summary_list)
hab_summary <- hab_summary[complete.cases(hab_summary[ , 'Habitat']),]
df_show <- hab_summary %>%
filter(Habitat %in% df_site.bb[[2]])
print(df_show)
View(df_show)
df_show <- df_show[ ,c('Habitat', feature, 1)]
df_show %>%
kbl(caption = "Average values using all plots across LTMN sites and years.") %>%
kable_styling()
feature <- 'Species_richness'
print(df_show)
df_show <- df_show[ ,c('Habitat', feature, 1)]
df_show %>%
kbl(caption = "Average values using all plots across LTMN sites and years.") %>%
kable_styling()
print(df_show)
df_show <- df_show[ ,c('Habitat', feature)]
df_show %>%
kbl(caption = "Average values using all plots across LTMN sites and years.") %>%
kable_styling()
df_show <- hab_summary %>%
filter(Habitat %in% df_site.bb[[2]]) %>%
.[ ,c('Habitat', feature)]
print(df_show)
df_show %>%
kbl(caption = "Average values using all plots across LTMN sites and years.") %>%
kable_styling()
df_show <- hab_summary %>%
filter(Habitat %in% df_site.bb[[2]]) %>%
.[ ,c('Habitat', feature)] %>%
round(.[[feature]], 2)
df_show <- hab_summary %>%
filter(Habitat %in% df_site.bb[[2]]) %>%
.[ ,c('Habitat', feature)] %>%
round([[feature]], 2)
df_show <- hab_summary %>%
filter(Habitat %in% df_site.bb[[2]]) %>%
.[ ,c('Habitat', feature)] %>%
round(feature, 2)
df_show[[features]]
df_show[[feature]]
round(df_show[[feature]], 0)
df_show[[feature]] <- round(df_show[[feature]], 0)
df_show %>%
kbl(caption = "Average values using all plots across LTMN sites and years.") %>%
kable_styling()
source('./data_prep_figure4.R')
knitr::opts_chunk$set(echo = FALSE)
opts_chunk$set(fig.width=8.65, fig.height=5)
setwd('C:/Users/kiera/Work/NE_work/Report')
name_swap_bap <- get_names('./dataframes/rename_habitat.csv')[[1]]
name_swap_nvc <- get_names('./dataframes/rename_habitat.csv')[[2]]
bb_list <- get_names('./dataframes/rename_habitat.csv')[[3]]
bp_list <- get_names('./dataframes/rename_habitat.csv')[[4]]
#df_all <- read_all_data('all_plots.csv')
df_all <- read_csv('./dataframes/report_plots.csv')
site_code <- 'B14'
# Taking the data from just one site
df_site <- filter(df_all, Sitecode == site_code) %>%
fix_names(., name_swap_bap) %>%
# transform the eastings and northings into latitude and longitude
transform_coords(.)
# Converts the NVC abbreviations to the full names
df_site$NVC_habitat <- name_swap(df_site$NVC_habitat, name_swap_nvc)
df_site$Year <- as.character(df_site$Year)
#df_site$Species_diversity <- round(df_site$Species_diversity, 2)
# PLOT 30 for Lullington is really weird and should be removed as it ruins the
# scale
df_site <- df_site %>%
filter(Plot_ID != 30) %>%
filter(Plot_ID != '30a') %>%
filter(Plot_ID != '30')
# Making the sub dataframes with only the major habitats selected
#object[[1]] is the data frame. object[[2]] is the list of habitats
df_site.bb <- select_by(df_site, 'BAP_broad', 500,
include = c('Calcareous Grassland', 'Dwarf Shrub Heath'))
df_site.bp <- select_by(df_site, 'BAP_priority', 15)
df_site.nvcb <- select_by(df_site, 'NVC_group', 15)
df_site.nvcc <- select_by(df_site, 'NVC_habitat', 15)
# the centre points of the maps
east_cent <- get_centre_coords(df_site)[[1]]
north_cent <- get_centre_coords(df_site)[[2]]
unique_years <- unique(df_site$Year)
unique_habs <- unique(df_site$BAP_broad)
unique_nvchabs <- unique(df_site$NVC_habitat)
df_change <- get_change_by_year(df_site)
df_all2 <- read_csv('./dataframes/all_plots.csv')
hab_sum <- get_hab_sums(df_all2)
map_hab_by_year(df_site, 'BAP_broad')
#frameWidget(nn, width='95%')
setwd("C:/Users/kiera/Work/NE_work/Report")
getwd()
source('./data_prep_figure4.R')
################################################################################
name_swap_bap <- get_names('./dataframes/rename_habitat.csv')[[1]]
name_swap_nvc <- get_names('./dataframes/rename_habitat.csv')[[2]]
bb_list <- get_names('./dataframes/rename_habitat.csv')[[3]]
bp_list <- get_names('./dataframes/rename_habitat.csv')[[4]]
#df_all <- read_all_data('all_plots.csv')
df_all <- read_csv('./dataframes/report_plots.csv')
site_code <- 'B14'
# Taking the data from just one site
df_site <- filter(df_all, Sitecode == site_code) %>%
fix_names(., name_swap_bap) %>%
# transform the eastings and northings into latitude and longitude
transform_coords(.)
# Converts the NVC abbreviations to the full names
df_site$NVC_habitat <- name_swap(df_site$NVC_habitat, name_swap_nvc)
df_site$Year <- as.character(df_site$Year)
#df_site$Species_diversity <- round(df_site$Species_diversity, 2)
# Making the sub dataframes with only the major habitats selected
#object[[1]] is the data frame. object[[2]] is the list of habitats
df_site.bb <- select_by(df_site, 'BAP_broad', 20)#include = c('Calcareous Grassland', 'Dwarf Shrub Heath'))
df_site.bp <- select_by(df_site, 'BAP_priority', 15)
df_site.nvcb <- select_by(df_site, 'NVC_group', 15)
df_site.nvcc <- select_by(df_site, 'NVC_habitat', 15)
# the centre points of the maps
east_cent <- get_centre_coords(df_site)[[1]]
north_cent <- get_centre_coords(df_site)[[2]]
unique_years <- unique(df_site$Year)
unique_habs <- unique(df_site$BAP_broad)
unique_nvchabs <- unique(df_site$NVC_habitat)
df_change <- get_change_by_year(df_site)
df_all2 <- read_csv('./dataframes/all_plots.csv')
hab_sum <- get_hab_sums(df_all2)
################################################################################
map_hab_by_year(df_site, 'BAP_broad')
library(RColorBrewer)
n <- 60
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
pie(rep(1,n), col=sample(col_vector, n))
df <- df_site
habitat <- 'BAP_broad'
list_of_years <- unique(df$Year)
list_of_habs <- unique(df[[habitat]])
#factpal_site <- colorFactor(topo.colors(length(list_of_habs)), list_of_habs)
factpal_site <- colorFactor(sample(col_vector, length(list_of_habs)), list_of_habs)
centre_coords <- get_centre_coords(df)
east_cent <- centre_coords[[1]]
north_cent <- centre_coords[[2]]
n <- leaflet(df) %>%
addTiles() %>%
setView(lng=east_cent, lat=north_cent, zoom = 14.3) %>%
addCircleMarkers(lng = ~coords.easting, lat = ~coords.northing,
color = factpal_site(df[[habitat]]),
group = ~Year,
label = ~NVC_group,
stroke = FALSE, fillOpacity = 0.7) %>%
addLegend(pal = factpal_site,
values = df[[habitat]],
opacity = 0.7,
title = habitat,
position = 'bottomleft') %>%
addLayersControl(baseGroups = list_of_years,
options = layersControlOptions(collapsed = F))
n
library(viridis)
install.packages('viridis')
factpal_site <- colorFactor(viridis(length(list_of_habs)), list_of_habs)
centre_coords <- get_centre_coords(df)
east_cent <- centre_coords[[1]]
north_cent <- centre_coords[[2]]
n <- leaflet(df) %>%
addTiles() %>%
setView(lng=east_cent, lat=north_cent, zoom = 14.3) %>%
addCircleMarkers(lng = ~coords.easting, lat = ~coords.northing,
color = factpal_site(df[[habitat]]),
group = ~Year,
label = ~NVC_group,
stroke = FALSE, fillOpacity = 0.7) %>%
addLegend(pal = factpal_site,
values = df[[habitat]],
opacity = 0.7,
title = habitat,
position = 'bottomleft') %>%
addLayersControl(baseGroups = list_of_years,
options = layersControlOptions(collapsed = F))
n
factpal_site <- colorFactor(viridis(length(list_of_habs)), list_of_habs)
list_of_years <- unique(df$Year)
list_of_habs <- unique(df[[habitat]])
#factpal_site <- colorFactor(topo.colors(length(list_of_habs)), list_of_habs)
factpal_site <- colorFactor(sample(col_vector, length(list_of_habs)), list_of_habs)
centre_coords <- get_centre_coords(df)
east_cent <- centre_coords[[1]]
north_cent <- centre_coords[[2]]
n <- leaflet(df) %>%
addTiles() %>%
setView(lng=east_cent, lat=north_cent, zoom = 14.3) %>%
addCircleMarkers(lng = ~coords.easting, lat = ~coords.northing,
color = factpal_site(df[[habitat]]),
group = ~Year,
label = ~NVC_group,
stroke = FALSE, fillOpacity = 0.7) %>%
addLegend(pal = factpal_site,
values = df[[habitat]],
opacity = 0.7,
title = habitat,
position = 'bottomleft') %>%
addLayersControl(baseGroups = list_of_years,
options = layersControlOptions(collapsed = F))
n
factpal_site <- colorFactor(viridis(length(list_of_habs)), list_of_habs)
list_of_years <- unique(df$Year)
list_of_habs <- unique(df[[habitat]])
#factpal_site <- colorFactor(topo.colors(length(list_of_habs)), list_of_habs)
#factpal_site <- colorFactor(sample(col_vector, length(list_of_habs)), list_of_habs)
centre_coords <- get_centre_coords(df)
east_cent <- centre_coords[[1]]
north_cent <- centre_coords[[2]]
n <- leaflet(df) %>%
addTiles() %>%
setView(lng=east_cent, lat=north_cent, zoom = 14.3) %>%
addCircleMarkers(lng = ~coords.easting, lat = ~coords.northing,
color = factpal_site(df[[habitat]]),
group = ~Year,
label = ~NVC_group,
stroke = FALSE, fillOpacity = 0.7) %>%
addLegend(pal = factpal_site,
values = df[[habitat]],
opacity = 0.7,
title = habitat,
position = 'bottomleft') %>%
addLayersControl(baseGroups = list_of_years,
options = layersControlOptions(collapsed = F))
n
factpal_site <- colorFactor(topo.colors(length(list_of_habs)), list_of_habs)
centre_coords <- get_centre_coords(df)
east_cent <- centre_coords[[1]]
north_cent <- centre_coords[[2]]
n <- leaflet(df) %>%
addTiles() %>%
setView(lng=east_cent, lat=north_cent, zoom = 14.3) %>%
addCircleMarkers(lng = ~coords.easting, lat = ~coords.northing,
color = factpal_site(df[[habitat]]),
group = ~Year,
label = ~NVC_group,
stroke = FALSE, fillOpacity = 0.7) %>%
addLegend(pal = factpal_site,
values = df[[habitat]],
opacity = 0.7,
title = habitat,
position = 'bottomleft') %>%
addLayersControl(baseGroups = list_of_years,
options = layersControlOptions(collapsed = F))
n
nn <- length(list_of_habs)
factpal_site <- colorFactor(display.brewer.pal(n = 8, name = 'Dark2'), list_of_habs)
factpal_site <- colorFactor(display.brewer.pal(n = nn, name = 'Dark2'), list_of_habs)
centre_coords <- get_centre_coords(df)
east_cent <- centre_coords[[1]]
north_cent <- centre_coords[[2]]
n <- leaflet(df) %>%
addTiles() %>%
setView(lng=east_cent, lat=north_cent, zoom = 14.3) %>%
addCircleMarkers(lng = ~coords.easting, lat = ~coords.northing,
color = factpal_site(df[[habitat]]),
group = ~Year,
label = ~NVC_group,
stroke = FALSE, fillOpacity = 0.7) %>%
addLegend(pal = factpal_site,
values = df[[habitat]],
opacity = 0.7,
title = habitat,
position = 'bottomleft') %>%
addLayersControl(baseGroups = list_of_years,
options = layersControlOptions(collapsed = F))
n
factpal_site <- colorFactor(brewer.pal(n = nn, name = 'Dark2'), list_of_habs)
centre_coords <- get_centre_coords(df)
east_cent <- centre_coords[[1]]
north_cent <- centre_coords[[2]]
n <- leaflet(df) %>%
addTiles() %>%
setView(lng=east_cent, lat=north_cent, zoom = 14.3) %>%
addCircleMarkers(lng = ~coords.easting, lat = ~coords.northing,
color = factpal_site(df[[habitat]]),
group = ~Year,
label = ~NVC_group,
stroke = FALSE, fillOpacity = 0.7) %>%
addLegend(pal = factpal_site,
values = df[[habitat]],
opacity = 0.7,
title = habitat,
position = 'bottomleft') %>%
addLayersControl(baseGroups = list_of_years,
options = layersControlOptions(collapsed = F))
n
nn <- length(list_of_habs)
factpal_site <- colorFactor(brewer.pal(n = nn, name = 'set2'), list_of_habs)
centre_coords <- get_centre_coords(df)
east_cent <- centre_coords[[1]]
north_cent <- centre_coords[[2]]
n <- leaflet(df) %>%
addTiles() %>%
setView(lng=east_cent, lat=north_cent, zoom = 14.3) %>%
addCircleMarkers(lng = ~coords.easting, lat = ~coords.northing,
color = factpal_site(df[[habitat]]),
group = ~Year,
label = ~NVC_group,
stroke = FALSE, fillOpacity = 0.7) %>%
addLegend(pal = factpal_site,
values = df[[habitat]],
opacity = 0.7,
title = habitat,
position = 'bottomleft') %>%
addLayersControl(baseGroups = list_of_years,
options = layersControlOptions(collapsed = F))
n
factpal_site <- colorFactor(brewer.pal(n = nn, name = 'set2'), list_of_habs)
factpal_site <- colorFactor(brewer.pal(n = nn, name = 'Set2'), list_of_habs)
centre_coords <- get_centre_coords(df)
east_cent <- centre_coords[[1]]
north_cent <- centre_coords[[2]]
n <- leaflet(df) %>%
addTiles() %>%
setView(lng=east_cent, lat=north_cent, zoom = 14.3) %>%
addCircleMarkers(lng = ~coords.easting, lat = ~coords.northing,
color = factpal_site(df[[habitat]]),
group = ~Year,
label = ~NVC_group,
stroke = FALSE, fillOpacity = 0.7) %>%
addLegend(pal = factpal_site,
values = df[[habitat]],
opacity = 0.7,
title = habitat,
position = 'bottomleft') %>%
addLayersControl(baseGroups = list_of_years,
options = layersControlOptions(collapsed = F))
n
